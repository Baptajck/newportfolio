{"version":3,"sources":["components/Header/Nav/index.js","components/Header/index.js","utils/index.js","components/Presentation/Entete/index.js","components/Presentation/Fiche/index.js","components/Presentation/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Nav","useState","open","isOpen","toggle","className","onClick","href","Header","width","isSSR","window","innerWidth","height","innerHeight","windowSize","setWindowSize","changeWindowSize","useEffect","addEventListener","removeEventListener","useWindowSize","Entete","src","alt","Fiche","Presentation","App","Boolean","location","hostname","match","rootComponent","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8ZA0CeA,EArCH,WAAO,IAAD,EACOC,oBAAS,GADhB,mBACTC,EADS,KACHC,EADG,KAGVC,EAAS,kBAAMD,GAAQD,IAE7B,OACE,yBAAKG,UAAU,OAcb,6BACE,yBAAKA,UAAU,aAAaC,QAASF,GAAUF,EAA6B,kBAAC,IAAD,MAAtB,kBAAC,IAAD,OACtD,wBAAIG,UAAS,oBAAeH,EAAO,iBAAmB,KAClD,wBAAIG,UAAWH,EAAO,OAAS,IAAI,uBAAGK,KAAK,gBAAgBD,QAASF,GAAjC,oBACnC,wBAAIC,UAAWH,EAAO,OAAS,IAAI,uBAAGK,KAAK,eAAeD,QAASF,GAAhC,mBACnC,wBAAIC,UAAWH,EAAO,OAAS,IAAI,uBAAGK,KAAK,WAAWD,QAASF,GAA5B,YACnC,wBAAIC,UAAWH,EAAO,OAAS,IAAI,uBAAGK,KAAK,WAAWD,QAASF,GAA5B,gBCJhCI,EAtBA,WAAO,IACZC,ECAmB,WAC3B,IAAMC,EAA0B,qBAAXC,OADY,EAEGV,mBAAS,CAC3CQ,MAAOC,GAASC,OAAOC,WACvBC,OAAQH,EAAQ,IAAMC,OAAOG,cAJE,mBAE1BC,EAF0B,KAEdC,EAFc,KAO3BC,EAAmB,WACvBD,EAAc,CAAEP,MAAOE,OAAOC,WAAYC,OAAQF,OAAOG,eAW3D,OARAI,qBAAU,WAGR,OAFAP,OAAOQ,iBAAiB,SAAUF,GAE3B,WACLN,OAAOS,oBAAoB,SAAUH,MAEtC,IAEIF,EDnBWM,GAAVZ,MAER,OACE,4BAAQJ,UAAU,UAChB,wBAAIA,UAAU,gBAAd,YAEEI,GAAS,IACP,kBAAC,EAAD,MAEA,wBAAIJ,UAAU,eACZ,wBAAIA,UAAU,oBAAmB,uBAAGE,KAAK,iBAAR,oBACjC,wBAAIF,UAAU,oBAAmB,uBAAGE,KAAK,gBAAR,mBACjC,wBAAIF,UAAU,oBAAmB,uBAAGE,KAAK,YAAR,YACjC,wBAAIF,UAAU,oBAAmB,uBAAGE,KAAK,YAAR,eED9Be,G,YAfA,WACb,OACE,yBAAKjB,UAAU,UACb,yBAAKA,UAAU,yBACb,yBAAKkB,IAAI,kCAAkCC,IAAI,iBAAiBnB,UAAU,oBAE5E,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,gBAAd,6BACA,uBAAGA,UAAU,cAAb,gCACA,4BAAQA,UAAU,iBAAgB,uBAAGE,KAAK,YAAR,sBCM3BkB,G,MAfD,WACZ,OACE,yBAAKpB,UAAU,SACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,eAAd,mBACA,wBAAIA,UAAU,kBAAd,iCACA,uBAAGA,UAAU,cAAb,+VAEF,6BACE,yBAAKkB,IAAI,kCAAkCC,IAAI,gBAAgBnB,UAAU,kBCIlEqB,EAVM,WAEnB,OACE,yBAAKrB,UAAU,gBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCaSsB,EAbH,WACV,OACE,yBAAKtB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,UCLUuB,QACW,cAA7BjB,OAAOkB,SAASC,UAEe,UAA7BnB,OAAOkB,SAASC,UAEhBnB,OAAOkB,SAASC,SAASC,MACvB,2D,WCTAC,EACJ,kBAAC,IAAD,KACE,kBAAC,EAAD,OAKJC,iBAAOD,EAAeE,SAASC,eAAe,SDmHxC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.570bdfdd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Nav.scss';\r\nimport { GiHamburgerMenu } from \"react-icons/gi\";\r\nimport { MdClose } from \"react-icons/md\";\r\n\r\nconst Nav = () => {\r\n  const [open, isOpen] = useState(false);\r\n\r\n  const toggle = () => isOpen(!open);\r\n  \r\n  return (\r\n    <div className=\"nav\">\r\n      {/* <div className=\"nav-burger\" onClick={toggle}>{!open ? <GiHamburgerMenu /> : <MdClose />}</div> */}\r\n\r\n      {/*\r\n        open && (\r\n          <ul className=\"nav-list\">\r\n            <li className=\"nav-list-item\">Presentation</li>\r\n            <li className=\"nav-list-item\">Compétences</li>\r\n            <li className=\"nav-list-item\">Projets</li>\r\n            <li className=\"nav-list-item\">Contact</li>\r\n          </ul>\r\n        )\r\n      */}\r\n\r\n      <nav>\r\n        <div className=\"nav-burger\" onClick={toggle}>{!open ? <GiHamburgerMenu /> : <MdClose />}</div>\r\n        <ul className={`nav-links ${open ? \"open nav-links\" : ''}`}>\r\n            <li className={open ? \"fade\" : ''}><a href=\"#presentation\" onClick={toggle}>Présentation</a></li>\r\n            <li className={open ? \"fade\" : ''}><a href=\"#competences\" onClick={toggle}>Compétences</a></li>\r\n            <li className={open ? \"fade\" : ''}><a href=\"#projets\" onClick={toggle}>Projets</a></li>\r\n            <li className={open ? \"fade\" : ''}><a href=\"#contact\" onClick={toggle}>Contact</a></li>\r\n            {/* \r\n              <li><button className=\"login-button\" href=\"#\">Login</button></li>\r\n              <li><button className=\"join-button\" href=\"#\">Join</button></li>\r\n            */}\r\n        </ul>\r\n    </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\nimport './Header.scss';\nimport Nav from './Nav';\nimport { useWindowSize } from '../../utils';\n\nconst Header = () => {\n  const { width } = useWindowSize();\n\n  return (\n    <header className=\"header\">\n      <h1 className=\"header-title\">baptjack</h1>\n      {\n        width <= 768 ? (\n          <Nav />\n        ) : (\n          <ul className=\"header-list\">\n            <li className=\"header-list-item\"><a href=\"#presentation\">Présentation</a></li>\n            <li className=\"header-list-item\"><a href=\"#competences\">Compétences</a></li>\n            <li className=\"header-list-item\"><a href=\"#projets\">Projets</a></li>\n            <li className=\"header-list-item\"><a href=\"#contact\">Contact</a></li>\n          </ul>\n        )\n      }\n    </header>\n  );\n}\n\nexport default Header;","import { useState, useEffect } from 'react';\r\n\r\n/**\r\n  * function permettant de voir la largeur/hauteur de la page et de mettre ce que l'on souhaite\r\n  * On peut changer les chiffres pour avoir le rapport qu'on souhaite\r\n  */\r\nexport const useWindowSize = () => {\r\n  const isSSR = typeof window !== \"undefined\";\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: isSSR && window.innerWidth,\r\n    height: isSSR ? 800 : window.innerHeight,\r\n  });\r\n\r\n  const changeWindowSize = () => {\r\n    setWindowSize({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", changeWindowSize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", changeWindowSize);\r\n    };\r\n  }, []);\r\n\r\n  return windowSize;\r\n}","import React from 'react'\r\nimport './Entete.scss'\r\n\r\nconst Entete = () => {\r\n  return (\r\n    <div className=\"entete\">\r\n      <div className=\"entete-container--img\">\r\n        <img src=\"https://i.imgur.com/HR0AvNr.jpg\" alt=\"moi en en tete\" className=\"entete-losange\" />\r\n      </div>\r\n      <div className=\"entete-container--infos\">\r\n        <h1 className=\"entete-title\">Je suis Baptiste Parville</h1>\r\n        <p className=\"entete-job\">Développeur Web Fullstack</p>\r\n        <button className=\"entete-button\"><a href=\"#contact\">Contactez moi</a></button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Entete;","import React from 'react'\r\nimport './Fiche.scss'\r\n\r\nconst Fiche = () => {\r\n  return (\r\n    <div className=\"fiche\">\r\n      <div className=\"fiche-container-infos\">\r\n        <h2 className=\"fiche-title\">Présentation</h2>\r\n        <h3 className=\"fiche-subtitle\">Je suis en développeur web</h3>\r\n        <p className=\"fiche-desc\">Lorem ipsum dolor, sit amet consectetur adipisicing elit. Magni itaque fugit nulla iusto laborum. Id ut rerum unde reiciendis ipsa nisi aut, sunt sapiente quaerat nemo, vitae recusandae hic quas eaque eos cum fuga? Ullam repellendus saepe, expedita consequatur non maiores ea quos placeat repudiandae consequuntur quaerat officiis quidem laborum.</p>\r\n      </div>\r\n      <div>\r\n        <img src=\"https://i.imgur.com/aaU4uBv.jpg\" alt=\"bureau et moi\" className=\"fiche-img\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Fiche;","import React from 'react';\r\nimport './Presentation.scss';\r\n\r\nimport Entete from './Entete';\r\nimport Fiche from './Fiche';\r\n\r\nconst Presentation = () => {\r\n\r\n  return (\r\n    <div className=\"presentation\">\r\n      <Entete />\r\n      <Fiche />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Presentation;","import React from 'react';\nimport './App.scss';\nimport { Route, Switch } from 'react-router-dom';\n\n/**\n * Import local de components\n */\nimport Header from '../Header';\nimport Presentation from '../Presentation';\n\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route>\n          <Header />\n          <Presentation />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './styles/reset.scss';\nimport './styles/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// == Render\nconst rootComponent = (\n  <Router>\n    <App />\n  </Router>\n);\n\n// Le rendu de React => DOM\nrender(rootComponent, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}